{"ast":null,"code":"var _jsxFileName = \"/Users/mayankpal/Desktop/Projects/In progress/rule-engine-ast/frontend/src/components/EvaluateRule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Card, CardContent, Typography, Alert } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvaluateRule = () => {\n  _s();\n  const [ruleId, setRuleId] = useState('');\n  const [data, setData] = useState('');\n  const [result, setResult] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let userData;\n      try {\n        // Attempt to parse the user data as JSON\n        userData = JSON.parse(data);\n      } catch (jsonError) {\n        setResult({\n          error: 'Invalid JSON format. Please check your input.'\n        });\n        return;\n      }\n\n      // Log the parsed user data for debugging purposes\n      console.log('User data:', userData);\n\n      // Make the POST request to evaluate the rule\n      const res = await axios.post(`/api/rules/evaluate/${ruleId}`, {\n        data: userData\n      });\n\n      // Log the response for debugging purposes\n      console.log('API response:', res.data);\n      setResult(res.data.result);\n    } catch (error) {\n      console.error('Error during rule evaluation:', error);\n      setResult({\n        error: 'Error evaluating rule'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        gutterBottom: true,\n        children: \"Evaluate a Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Rule ID\",\n          value: ruleId,\n          onChange: e => setRuleId(e.target.value.replace(/['\"]+/g, '')) // Remove any quotes from input\n          ,\n          fullWidth: true,\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"User Data (JSON)\",\n          value: data,\n          onChange: e => setData(e.target.value),\n          fullWidth: true,\n          margin: \"normal\",\n          placeholder: \"e.g. { \\\"age\\\": 35, \\\"department\\\": \\\"Sales\\\" }\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Evaluate Rule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), result !== null && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: result.error ? 'error' : 'info',\n        sx: {\n          mt: 2\n        },\n        children: result.error ? result.error : `Result: ${result ? 'Valid' : 'Invalid'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(EvaluateRule, \"yhqCnVk6p9u7Lhe+Pkb5tco3d2w=\");\n_c = EvaluateRule;\nexport default EvaluateRule;\nvar _c;\n$RefreshReg$(_c, \"EvaluateRule\");","map":{"version":3,"names":["React","useState","TextField","Button","Card","CardContent","Typography","Alert","axios","jsxDEV","_jsxDEV","EvaluateRule","_s","ruleId","setRuleId","data","setData","result","setResult","handleSubmit","e","preventDefault","userData","JSON","parse","jsonError","error","console","log","res","post","sx","maxWidth","mx","mt","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","replace","fullWidth","margin","required","placeholder","color","type","severity","_c","$RefreshReg$"],"sources":["/Users/mayankpal/Desktop/Projects/In progress/rule-engine-ast/frontend/src/components/EvaluateRule.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Card, CardContent, Typography, Alert } from '@mui/material';\nimport axios from 'axios';\n\nconst EvaluateRule = () => {\n    const [ruleId, setRuleId] = useState('');\n    const [data, setData] = useState('');\n    const [result, setResult] = useState(null);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            let userData;\n            try {\n                // Attempt to parse the user data as JSON\n                userData = JSON.parse(data);\n            } catch (jsonError) {\n                setResult({ error: 'Invalid JSON format. Please check your input.' });\n                return;\n            }\n\n            // Log the parsed user data for debugging purposes\n            console.log('User data:', userData);\n\n            // Make the POST request to evaluate the rule\n            const res = await axios.post(`/api/rules/evaluate/${ruleId}`, { data: userData });\n\n            // Log the response for debugging purposes\n            console.log('API response:', res.data);\n\n            setResult(res.data.result);\n        } catch (error) {\n            console.error('Error during rule evaluation:', error);\n            setResult({ error: 'Error evaluating rule' });\n        }\n    };\n\n    return (\n        <Card sx={{ maxWidth: 600, mx: 'auto', mt: 4 }}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"div\" gutterBottom>\n                    Evaluate a Rule\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <TextField\n                        label=\"Rule ID\"\n                        value={ruleId}\n                        onChange={(e) => setRuleId(e.target.value.replace(/['\"]+/g, ''))}  // Remove any quotes from input\n                        fullWidth\n                        margin=\"normal\"\n                        required\n                    />\n                    <TextField\n                        label=\"User Data (JSON)\"\n                        value={data}\n                        onChange={(e) => setData(e.target.value)}\n                        fullWidth\n                        margin=\"normal\"\n                        placeholder='e.g. { \"age\": 35, \"department\": \"Sales\" }'\n                        required\n                    />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                        Evaluate Rule\n                    </Button>\n                </form>\n                {result !== null && (\n                    <Alert severity={result.error ? 'error' : 'info'} sx={{ mt: 2 }}>\n                        {result.error ? result.error : `Result: ${result ? 'Valid' : 'Invalid'}`}\n                    </Alert>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EvaluateRule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}